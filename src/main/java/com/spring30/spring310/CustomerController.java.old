package com.spring30.spring310;

import java.util.ArrayList;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/api") // sets the base URL for all the endpoints in this controller eg http://localhost:8080/api/customers
public class CustomerController {

    private ArrayList<Customer> customers = new ArrayList<>();

    @GetMapping("/test")
    public String test() {
        return "Hello World!";
    }

    // 1. Create customer
    // ResponseEntity is a wrapper for the response body and the HTTP status code

    @PostMapping("/customers")
    public ResponseEntity<Customer> createCustomer(@RequestBody Customer customer) {
        customers.add(customer);
        return new ResponseEntity<>(customer, HttpStatus.CREATED);
    }

    // 2. Read get all customers
    @GetMapping("/customers")
    public ResponseEntity<ArrayList<Customer>> getCustomers() {
        return new ResponseEntity<>(customers, HttpStatus.OK);
    }


    // get individual customer by id

    private int findCustomerIndex(String id) {
        for (Customer customer : customers) {
            if (customer.getId().equals(id)) {
                return customers.indexOf(customer);
            }
        }
        return -1;
    }

    @GetMapping("/customers/{id}")
    public ResponseEntity<Customer> getCustomer(@PathVariable String id) {
       
            return new ResponseEntity<>(customers.get(findCustomerIndex(id)), HttpStatus.OK);
    }

    // 3. Update customer
    @PutMapping("/customers/{id}")
    public ResponseEntity<Customer> updateCustomer(@PathVariable String id, @RequestBody Customer customer) {
        Customer customerToUpdate = customers.get(findCustomerIndex(id));
        customerToUpdate.setFirstName(customer.getFirstName());
        customerToUpdate.setLastName(customer.getLastName());
        customerToUpdate.setEmail(customer.getEmail());
        return new ResponseEntity<>(customerToUpdate, HttpStatus.OK);
    }

    // 4. Delete customer

    @DeleteMapping("/customers/{id}")
    public ResponseEntity<HttpStatus> deleteCustomer(@PathVariable String id) {
        customers.remove(findCustomerIndex(id));
        return new ResponseEntity<>(HttpStatus.NO_CONTENT);
    }
      
}